USER_INFO 테이블과 ONLINE_SALE 테이블에서
2021년에 가입한 전체 회원들 중 
상품을 구매한 회원수와 상품을 구매한 회원의 
비율(=2021년에 가입한 회원 중 상품을 구매한 회원수 / 2021년에 가입한 전체 회원 수)을 
년, 월 별로 출력하는 SQL문을 작성

상품을 구매한 회원의 비율은 소수점 두번째자리에서 반올림하고,
전체 결과는 년을 기준으로 오름차순 정렬해주시고 
년이 같다면 월을 기준으로 오름차순 정렬해주세요.

-- 21년에 가입한 사람 수
SELECT COUNT(INFO.USER_ID)
FROM USER_INFO AS INFO
WHERE YEAR(INFO.JOINED) = 2021

-- 21년에 가입한 사람 중 상품을 구매한 사람들의 년,월 회원 수
SELECT YEAR(SALES_DATE) AS YEAR, MONTH(SALES_DATE) AS MONTH, COUNT(DISTINCT SALE.USER_ID) AS PUCHASED_USERS
FROM ONLINE_SALE AS SALE
WHERE SALE.USER_ID IN (
    SELECT USER_ID
    FROM USER_INFO
    WHERE YEAR(JOINED) = 2021)    
GROUP BY YEAR, MONTH
ORDER BY SALE.ONLINE_SALE_ID ASC

-- 1트(성공) : join 카테고리에 있길래 JOIN으로 풀려다가 굳이?란 생각으로 풀었음
SELECT YEAR(SALES_DATE) AS YEAR, MONTH(SALES_DATE) AS MONTH, COUNT(DISTINCT SALE.USER_ID) AS PUCHASED_USERS,
    ROUND((COUNT(DISTINCT SALE.USER_ID) / (SELECT COUNT(INFO.JOINED)
    FROM USER_INFO AS INFO
    WHERE YEAR(INFO.JOINED) = 2021)), 1) AS PUCHASED_RATIO
FROM ONLINE_SALE AS SALE
WHERE SALE.USER_ID IN (
    SELECT USER_ID
    FROM USER_INFO
    WHERE YEAR(JOINED) = 2021)    
GROUP BY YEAR, MONTH
ORDER BY YEAR ASC, MONTH ASC
